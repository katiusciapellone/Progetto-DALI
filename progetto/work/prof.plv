 :-dynamic ricevimento_con/1. :-dynamic disponibile/1. :-dynamic sincrono/1. :-dynamic deterministico/1. :-dynamic asincrono/1. :-dynamic non_deterministico/1. :-dynamic ho_salutato/1,ho_deciso/1. :-dynamic specifiche_pubblicate/1. :-dynamic pubblico/1. :-dynamic progetti_consegnati/1. progetti_consegnati([]). stato(sveglio). ho_salutato(no). ho_deciso(no). sincrono(1). sincrono(3). deterministico(7). specifiche_pubblicate(no). studente(studente1). studente(studente2). studente(studente3). sveglia:-stato(sveglio),ho_salutato(no). evi(sveglia):-sleep(10),write('Ciao a tutti, sono rientrato dalle ferie'),retract(ho_salutato(no)),assert(ho_salutato(si)). decido_se_pubblicare:-specifiche_pubblicate(no),ho_salutato(si),ho_deciso(no). evi(decido_se_pubblicare):-random(0,2,D),assert(pubblico(D)),write(D),nl,retract(ho_deciso(no)). pubblicoSpecifiche:-specifiche_pubblicate(no),ho_salutato(si),pubblico(D),D==1. evi(pubblicoSpecifiche):-write('Il progetto deve rappresentare un sistema asincrono e non deterministico. Dovete inviarmi la vostra proposta e io la valutero; se la boccio possiamo accordarci per un ricevimento alla fine del quale avrete la traccia su cui lavorare. Per la consegna potete inviarmi un messaggio con il link al repository contenente il programma. Buon lavoro!'),nl,retract(specifiche_pubblicate(no)),assert(specifiche_pubblicate(si)),broadcast. broadcast:-studente(S),a(message(S,send_message(pubblicazione,Me))),fail. eve(sollecito):-write('Uno studente ha richiesto le specifiche. Eccole.'),nl,nl,retract(pubblico(D)),assert(pubblico(1)),pubblicoSpecifiche. eve(proposta(S,T)):-a(valuta(S,T)). a(valuta(S,T)):-deterministico(T),write('Traccia '),write(T),write(' deterministica, non va bene'),nl,nl,a(message(S,send_message(rifiutata,Me))). a(valuta(S,T)):-sincrono(T),write('Traccia '),write(T),write(' sincrona, non va bene'),nl,nl,a(message(S,send_message(rifiutata,Me))). a(valuta(S,T)):-write('La traccia '),write(T),write(' va bene'),nl,nl,a(message(S,send_message(accettata,Me))),assert(assegnato(T,S)). eve(richiestaRicevimento(S)):-a(message(S,send_message(ricevimento(giovedi),Me))),assert(ricevimento_con(S)). eve(update(F,T)):-u(F,T). eve(update(OldF,OldT,NewF,NewT)):-d(OldF,OldT),u(NewF,NewT). u(F,T):-F=sincrono->assert(sincrono(T));F=deterministico->assert(deterministico(T));F=asincrono->assert(asincrono(T));F=non_deterministico->assert(non_deterministico(T)). d(F,T):-F=sincrono->retract(sincrono(T));F=deterministico->retract(deterministico(T));F=asincrono->retract(asincrono(T));F=non_deterministico->retract(non_deterministico(T)). eve(consegna(Studente,Messaggio)):-progetti_consegnati(L),append(L,[(Studente,Messaggio)],NewL),retract(progetti_consegnati(L)),assert(progetti_consegnati(NewL)),nl,write('Ho ricevuto i progetti di: '),write(NewL),nl. monitoroConsegne:-progetti_consegnati(L),length(L,Len),Len>0. evi(monitoroConsegne):-progetti_consegnati(L),length(L,Len),Len>1->a(correggo(L)). a(correggo(L)):-nl,write('Correggo...'),nl,gestisciLista(L). gestisciLista([H|T]):-nl,write('Sto valutando '),H=(S,M),write(S),write('-'),write(M),nl,random(1,6,Voto),a(message(S,send_message(voto(Voto),Me))),retract(progetti_consegnati([H|T])),assert(progetti_consegnati(T)),sleep(0.2),random(0,2,N),write(N),nl,length(T,Len),(N==1,Len>0->gestisciLista(T);Len==0->nl,write('Ho finito di correggere'),nl;nl,write('Mi fermo un attimo')),nl. :-dynamic receive/1. :-dynamic send/2. :-dynamic isa/3. receive(send_message(X,Ag)):-told(Ag,send_message(X)),call_send_message(X,Ag). receive(propose(A,C,Ag)):-told(Ag,propose(A,C)),call_propose(A,C,Ag). receive(cfp(A,C,Ag)):-told(Ag,cfp(A,C)),call_cfp(A,C,Ag). receive(accept_proposal(A,Mp,Ag)):-told(Ag,accept_proposal(A,Mp),T),call_accept_proposal(A,Mp,Ag,T). receive(reject_proposal(A,Mp,Ag)):-told(Ag,reject_proposal(A,Mp),T),call_reject_proposal(A,Mp,Ag,T). receive(failure(A,M,Ag)):-told(Ag,failure(A,M),T),call_failure(A,M,Ag,T). receive(cancel(A,Ag)):-told(Ag,cancel(A)),call_cancel(A,Ag). receive(execute_proc(X,Ag)):-told(Ag,execute_proc(X)),call_execute_proc(X,Ag). receive(query_ref(X,N,Ag)):-told(Ag,query_ref(X,N)),call_query_ref(X,N,Ag). receive(inform(X,M,Ag)):-told(Ag,inform(X,M),T),call_inform(X,Ag,M,T). receive(inform(X,Ag)):-told(Ag,inform(X),T),call_inform(X,Ag,T). receive(refuse(X,Ag)):-told(Ag,refuse(X),T),call_refuse(X,Ag,T). receive(agree(X,Ag)):-told(Ag,agree(X)),call_agree(X,Ag). receive(confirm(X,Ag)):-told(Ag,confirm(X),T),call_confirm(X,Ag,T). receive(disconfirm(X,Ag)):-told(Ag,disconfirm(X)),call_disconfirm(X,Ag). receive(reply(X,Ag)):-told(Ag,reply(X)). send(To,query_ref(X,N,Ag)):-tell(To,Ag,query_ref(X,N)),send_m(To,query_ref(X,N,Ag)). send(To,send_message(X,Ag)):-tell(To,Ag,send_message(X)),send_m(To,send_message(X,Ag)). send(To,reject_proposal(X,L,Ag)):-tell(To,Ag,reject_proposal(X,L)),send_m(To,reject_proposal(X,L,Ag)). send(To,accept_proposal(X,L,Ag)):-tell(To,Ag,accept_proposal(X,L)),send_m(To,accept_proposal(X,L,Ag)). send(To,confirm(X,Ag)):-tell(To,Ag,confirm(X)),send_m(To,confirm(X,Ag)). send(To,propose(X,C,Ag)):-tell(To,Ag,propose(X,C)),send_m(To,propose(X,C,Ag)). send(To,disconfirm(X,Ag)):-tell(To,Ag,disconfirm(X)),send_m(To,disconfirm(X,Ag)). send(To,inform(X,M,Ag)):-tell(To,Ag,inform(X,M)),send_m(To,inform(X,M,Ag)). send(To,inform(X,Ag)):-tell(To,Ag,inform(X)),send_m(To,inform(X,Ag)). send(To,refuse(X,Ag)):-tell(To,Ag,refuse(X)),send_m(To,refuse(X,Ag)). send(To,failure(X,M,Ag)):-tell(To,Ag,failure(X,M)),send_m(To,failure(X,M,Ag)). send(To,execute_proc(X,Ag)):-tell(To,Ag,execute_proc(X)),send_m(To,execute_proc(X,Ag)). send(To,agree(X,Ag)):-tell(To,Ag,agree(X)),send_m(To,agree(X,Ag)). call_send_message(X,Ag):-send_message(X,Ag). call_execute_proc(X,Ag):-execute_proc(X,Ag). call_query_ref(X,N,Ag):-clause(agent(A),_),not(var(X)),meta_ref(X,N,L,Ag),a(message(Ag,inform(query_ref(X,N),values(L),A))). call_query_ref(X,_,Ag):-clause(agent(A),_),var(X),a(message(Ag,refuse(query_ref(variable),motivation(refused_variables),A))). call_query_ref(X,N,Ag):-clause(agent(A),_),not(var(X)),not(meta_ref(X,N,_,_)),a(message(Ag,inform(query_ref(X,N),motivation(no_values),A))). call_agree(X,Ag):-clause(agent(A),_),ground(X),meta_agree(X,Ag),a(message(Ag,inform(agree(X),values(yes),A))). call_confirm(X,Ag,T):-ground(X),statistics(walltime,[Tp,_]),asse_cosa(past_event(X,T)),retractall(past(X,Tp,Ag)),assert(past(X,Tp,Ag)). call_disconfirm(X,Ag):-ground(X),retractall(past(X,_,Ag)),retractall(past_event(X,_)). call_agree(X,Ag):-clause(agent(A),_),ground(X),not(meta_agree(X,_)),a(message(Ag,inform(agree(X),values(no),A))). call_agree(X,Ag):-clause(agent(A),_),not(ground(X)),a(message(Ag,refuse(agree(variable),motivation(refused_variables),A))). call_inform(X,Ag,M,T):-asse_cosa(past_event(inform(X,M,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(inform(X,M,Ag),_,Ag)),assert(past(inform(X,M,Ag),Tp,Ag)). call_inform(X,Ag,T):-asse_cosa(past_event(inform(X,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(inform(X,Ag),_,Ag)),assert(past(inform(X,Ag),Tp,Ag)). call_refuse(X,Ag,T):-clause(agent(A),_),asse_cosa(past_event(X,T)),statistics(walltime,[Tp,_]),retractall(past(X,_,Ag)),assert(past(X,Tp,Ag)),a(message(Ag,reply(received(X),A))). call_cfp(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_431207,Ontology,_431211),_431201),asserisci_ontologia(Ag,Ontology,A),once(call_meta_execute_cfp(A,C,Ag,_431245)),a(message(Ag,propose(A,[_431245],AgI))),retractall(ext_agent(Ag,_431283,Ontology,_431287)). call_propose(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_431081,Ontology,_431085),_431075),asserisci_ontologia(Ag,Ontology,A),once(call_meta_execute_propose(A,C,Ag)),a(message(Ag,accept_proposal(A,[],AgI))),retractall(ext_agent(Ag,_431151,Ontology,_431155)). call_propose(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_430969,Ontology,_430973),_430963),not(call_meta_execute_propose(A,C,Ag)),a(message(Ag,reject_proposal(A,[],AgI))),retractall(ext_agent(Ag,_431025,Ontology,_431029)). call_accept_proposal(A,Mp,Ag,T):-asse_cosa(past_event(accepted_proposal(A,Mp,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(accepted_proposal(A,Mp,Ag),_,Ag)),assert(past(accepted_proposal(A,Mp,Ag),Tp,Ag)). call_reject_proposal(A,Mp,Ag,T):-asse_cosa(past_event(rejected_proposal(A,Mp,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(rejected_proposal(A,Mp,Ag),_,Ag)),assert(past(rejected_proposal(A,Mp,Ag),Tp,Ag)). call_failure(A,M,Ag,T):-asse_cosa(past_event(failed_action(A,M,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(failed_action(A,M,Ag),_,Ag)),assert(past(failed_action(A,M,Ag),Tp,Ag)). call_cancel(A,Ag):-if(clause(high_action(A,Te,Ag),_430533),retractall(high_action(A,Te,Ag)),true),if(clause(normal_action(A,Te,Ag),_430567),retractall(normal_action(A,Te,Ag)),true). external_refused_action_propose(A,Ag):-clause(not_executable_action_propose(A,Ag),_). evi(external_refused_action_propose(A,Ag)):-clause(agent(Ai),_),a(message(Ag,failure(A,motivation(false_conditions),Ai))),retractall(not_executable_action_propose(A,Ag)). refused_message(AgM,Con):-clause(eliminated_message(AgM,_,_,Con,_),_). refused_message(To,M):-clause(eliminated_message(M,To,motivation(conditions_not_verified)),_430349). evi(refused_message(AgM,Con)):-clause(agent(Ai),_),a(message(AgM,inform(Con,motivation(refused_message),Ai))),retractall(eliminated_message(AgM,_,_,Con,_)),retractall(eliminated_message(Con,AgM,motivation(conditions_not_verified))). send_jasper_return_message(X,S,T,S0):-clause(agent(Ag),_430197),a(message(S,send_message(sent_rmi(X,T,S0),Ag))). gest_learn(H):-clause(past(learn(H),T,U),_430145),learn_if(H,T,U). evi(gest_learn(H)):-retractall(past(learn(H),_430021,_430023)),clause(agente(_430043,_430045,_430047,S),_430039),name(S,N),append(L,[46,112,108],N),name(F,L),manage_lg(H,F),a(learned(H)). cllearn:-clause(agente(_429815,_429817,_429819,S),_429811),name(S,N),append(L,[46,112,108],N),append(L,[46,116,120,116],To),name(FI,To),open(FI,read,_429915,[]),repeat,read(_429915,T),arg(1,T,H),write(H),nl,T==end_of_file,!,close(_429915). send_msg_learn(T,A,Ag):-a(message(Ag,confirm(learn(T),A))). told(S,send_message(update(_,_))):-member(S,[studente1,studente2,studente3]),!,false. told(S,send_message(update(_,_,_,_))):-member(S,[studente1,studente2,studente3]),!,false. told(From,send_message(M)):-true. told(Ag,execute_proc(_)):-true. told(Ag,query_ref(_,_)):-true. told(Ag,agree(_)):-true. told(Ag,confirm(_),200):-true. told(Ag,disconfirm(_)):-true. told(Ag,request(_,_)):-true. told(Ag,propose(_,_)):-true. told(Ag,accept_proposal(_,_),20):-true. told(Ag,reject_proposal(_,_),20):-true. told(_,failure(_,_),200):-true. told(_,cancel(_)):-true. told(Ag,inform(_,_),70):-true. told(Ag,inform(_),70):-true. told(Ag,reply(_)):-true. told(_,refuse(_,Xp)):-functor(Xp,Fp,_),Fp=agree. tell(prof,studente1,send_message(update(_,_))):-false. tell(To,From,send_message(M)):-true. tell(To,_,confirm(_)):-true. tell(To,_,disconfirm(_)):-true. tell(To,_,propose(_,_)):-true. tell(To,_,request(_,_)):-true. tell(To,_,execute_proc(_)):-true. tell(To,_,agree(_)):-true. tell(To,_,reject_proposal(_,_)):-true. tell(To,_,accept_proposal(_,_)):-true. tell(To,_,failure(_,_)):-true. tell(To,_,query_ref(_,_)):-true. tell(To,_,eve(_)):-true. tell(_,_,refuse(X,_)):-functor(X,F,_),(F=send_message;F=query_ref). tell(To,_,inform(_,M)):-true;M=motivation(refused_message). tell(To,_,inform(_)):-true,To\=user. tell(To,_,propose_desire(_,_)):-true. meta(P,V,AgM):-functor(P,F,N),N=0,clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,V,Pre,[Rep,Host]);same_as(F,V,Pre,[Rep,Host]);eq_class(F,V,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,V,PreM,[RepM,HostM]);same_as(F,V,PreM,[RepM,HostM]);eq_class(F,V,PreM,[RepM,HostM])),true,false),false)). meta(P,V,AgM):-functor(P,F,N),(N=1;N=2),clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),P=..L,substitute(F,L,H,Lf),V=..Lf. meta(P,V,_):-functor(P,F,N),N=2,symmetric(F),P=..L,delete(L,F,R),reverse(R,R1),append([F],R1,R2),V=..R2. meta(P,V,AgM):-clause(agent(Ag),_),functor(P,F,N),N=2,(symmetric(F,AgM);symmetric(F)),P=..L,delete(L,F,R),reverse(R,R1),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,Y,Pre,[Rep,Host]);same_as(F,Y,Pre,[Rep,Host]);eq_class(F,Y,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,Y,PreM,[RepM,HostM]);same_as(F,Y,PreM,[RepM,HostM]);eq_class(F,Y,PreM,[RepM,HostM])),true,false),false)),append([Y],R1,R2),V=..R2. meta(P,V,AgM):-clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),functor(P,F,N),N>2,if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),P=..L,substitute(F,L,H,Lf),V=..Lf. meta(P,V,AgM):-clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),functor(P,F,N),N=2,P=..L,if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),substitute(F,L,H,Lf),V=..Lf.
a(correggo(_1070153)):-cd(correggo(_1070153)),assert(do_action(correggo(_1070153),program)).
cd(correggo(_1070153)):-true.
a(learned(_1070161)):-cd(learned(_1070161)),assert(do_action(learned(_1070161),program)).
cd(learned(_1070161)):-true.
a(message(_1070169,confirm(learn(_1070181),_1070177))):-cd(message(_1070169,confirm(learn(_1070181),_1070177))),assert(do_action(message(_1070169,confirm(learn(_1070181),_1070177)),program)).
cd(message(_1070169,confirm(learn(_1070181),_1070177))):-true.
a(message(_1070189,reply(received(_1070201),_1070197))):-cd(message(_1070189,reply(received(_1070201),_1070197))),assert(do_action(message(_1070189,reply(received(_1070201),_1070197)),program)).
cd(message(_1070189,reply(received(_1070201),_1070197))):-true.
a(message(_1070189,accept_proposal(_1070197,[],_1070219))):-cd(message(_1070189,accept_proposal(_1070197,[],_1070219))),assert(do_action(message(_1070189,accept_proposal(_1070197,[],_1070219)),program)).
cd(message(_1070189,accept_proposal(_1070197,[],_1070219))):-true.
a(message(_1070189,failure(_1070197,motivation(false_conditions),_1070237))):-cd(message(_1070189,failure(_1070197,motivation(false_conditions),_1070237))),assert(do_action(message(_1070189,failure(_1070197,motivation(false_conditions),_1070237)),program)).
cd(message(_1070189,failure(_1070197,motivation(false_conditions),_1070237))):-true.
a(message(_1070189,inform(agree(_1070201),values(no),_1070197))):-cd(message(_1070189,inform(agree(_1070201),values(no),_1070197))),assert(do_action(message(_1070189,inform(agree(_1070201),values(no),_1070197)),program)).
cd(message(_1070189,inform(agree(_1070201),values(no),_1070197))):-true.
a(message(_1070189,inform(agree(_1070201),values(yes),_1070197))):-cd(message(_1070189,inform(agree(_1070201),values(yes),_1070197))),assert(do_action(message(_1070189,inform(agree(_1070201),values(yes),_1070197)),program)).
cd(message(_1070189,inform(agree(_1070201),values(yes),_1070197))):-true.
a(message(_1070189,inform(query_ref(_1070201,_1070317),motivation(no_values),_1070197))):-cd(message(_1070189,inform(query_ref(_1070201,_1070317),motivation(no_values),_1070197))),assert(do_action(message(_1070189,inform(query_ref(_1070201,_1070317),motivation(no_values),_1070197)),program)).
cd(message(_1070189,inform(query_ref(_1070201,_1070317),motivation(no_values),_1070197))):-true.
a(message(_1070189,inform(query_ref(_1070201,_1070317),values(_1070153),_1070197))):-cd(message(_1070189,inform(query_ref(_1070201,_1070317),values(_1070153),_1070197))),assert(do_action(message(_1070189,inform(query_ref(_1070201,_1070317),values(_1070153),_1070197)),program)).
cd(message(_1070189,inform(query_ref(_1070201,_1070317),values(_1070153),_1070197))):-true.
a(message(_1070189,propose(_1070197,[_1070369],_1070219))):-cd(message(_1070189,propose(_1070197,[_1070369],_1070219))),assert(do_action(message(_1070189,propose(_1070197,[_1070369],_1070219)),program)).
cd(message(_1070189,propose(_1070197,[_1070369],_1070219))):-true.
a(message(_1070189,refuse(agree(variable),motivation(refused_variables),_1070197))):-cd(message(_1070189,refuse(agree(variable),motivation(refused_variables),_1070197))),assert(do_action(message(_1070189,refuse(agree(variable),motivation(refused_variables),_1070197)),program)).
cd(message(_1070189,refuse(agree(variable),motivation(refused_variables),_1070197))):-true.
a(message(_1070189,refuse(query_ref(variable),motivation(refused_variables),_1070197))):-cd(message(_1070189,refuse(query_ref(variable),motivation(refused_variables),_1070197))),assert(do_action(message(_1070189,refuse(query_ref(variable),motivation(refused_variables),_1070197)),program)).
cd(message(_1070189,refuse(query_ref(variable),motivation(refused_variables),_1070197))):-true.
a(message(_1070189,reject_proposal(_1070197,[],_1070219))):-cd(message(_1070189,reject_proposal(_1070197,[],_1070219))),assert(do_action(message(_1070189,reject_proposal(_1070197,[],_1070219)),program)).
cd(message(_1070189,reject_proposal(_1070197,[],_1070219))):-true.
a(message(_1070449,inform(_1070455,motivation(refused_message),_1070237))):-cd(message(_1070449,inform(_1070455,motivation(refused_message),_1070237))),assert(do_action(message(_1070449,inform(_1070455,motivation(refused_message),_1070237)),program)).
cd(message(_1070449,inform(_1070455,motivation(refused_message),_1070237))):-true.
a(message(_1070471,send_message(accettata,_1070479))):-cd(message(_1070471,send_message(accettata,_1070479))),assert(do_action(message(_1070471,send_message(accettata,_1070479)),program)).
cd(message(_1070471,send_message(accettata,_1070479))):-true.
a(message(_1070471,send_message(pubblicazione,_1070479))):-cd(message(_1070471,send_message(pubblicazione,_1070479))),assert(do_action(message(_1070471,send_message(pubblicazione,_1070479)),program)).
cd(message(_1070471,send_message(pubblicazione,_1070479))):-true.
a(message(_1070471,send_message(rifiutata,_1070479))):-cd(message(_1070471,send_message(rifiutata,_1070479))),assert(do_action(message(_1070471,send_message(rifiutata,_1070479)),program)).
cd(message(_1070471,send_message(rifiutata,_1070479))):-true.
a(message(_1070471,send_message(ricevimento(giovedi),_1070479))):-cd(message(_1070471,send_message(ricevimento(giovedi),_1070479))),assert(do_action(message(_1070471,send_message(ricevimento(giovedi),_1070479)),program)).
cd(message(_1070471,send_message(ricevimento(giovedi),_1070479))):-true.
a(message(_1070471,send_message(voto(_1070551),_1070479))):-cd(message(_1070471,send_message(voto(_1070551),_1070479))),assert(do_action(message(_1070471,send_message(voto(_1070551),_1070479)),program)).
cd(message(_1070471,send_message(voto(_1070551),_1070479))):-true.
a(message(_1070471,send_message(sent_rmi(_1070201,_1070573,_1070575),_1070189))):-cd(message(_1070471,send_message(sent_rmi(_1070201,_1070573,_1070575),_1070189))),assert(do_action(message(_1070471,send_message(sent_rmi(_1070201,_1070573,_1070575),_1070189)),program)).
cd(message(_1070471,send_message(sent_rmi(_1070201,_1070573,_1070575),_1070189))):-true.
a(valuta(_1070471,_1070573)):-cd(valuta(_1070471,_1070573)),assert(do_action(valuta(_1070471,_1070573),program)).
cd(valuta(_1070471,_1070573)):-true.
eve_cond(sollecito):-cd(sollecito),eve(sollecito).
cd(sollecito):-true.
eve_cond(richiestaRicevimento(_1096667)):-cd(richiestaRicevimento(_1096667)),eve(richiestaRicevimento(_1096667)).
cd(richiestaRicevimento(_1096667)):-true.
eve_cond(consegna(_1096675,_1096677)):-cd(consegna(_1096675,_1096677)),eve(consegna(_1096675,_1096677)).
cd(consegna(_1096675,_1096677)):-true.
eve_cond(proposta(_1096667,_1096687)):-cd(proposta(_1096667,_1096687)),eve(proposta(_1096667,_1096687)).
cd(proposta(_1096667,_1096687)):-true.
eve_cond(update(_1096695,_1096687)):-cd(update(_1096695,_1096687)),eve(update(_1096695,_1096687)).
cd(update(_1096695,_1096687)):-true.
eve_cond(update(_1096705,_1096707,_1096709,_1096711)):-cd(update(_1096705,_1096707,_1096709,_1096711)),eve(update(_1096705,_1096707,_1096709,_1096711)).
cd(update(_1096705,_1096707,_1096709,_1096711)):-true.